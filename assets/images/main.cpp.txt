#include <iostream>
#include <Windows.h>
#include <cmath>

void Draw8Points(HDC hdc, int xc, int yc, int x, int y, COLORREF color) {
    SetPixel(hdc, xc + x, yc + y, color);
    SetPixel(hdc, xc - x, yc + y, color);
    SetPixel(hdc, xc - x, yc - y, color);
    SetPixel(hdc, xc + x, yc - y, color);
    SetPixel(hdc, xc + y, yc + x, color);
    SetPixel(hdc, xc - y, yc + x, color);
    SetPixel(hdc, xc - y, yc - x, color);
    SetPixel(hdc, xc + y, yc - x, color);

}

void Draw_Circle(HDC hdc, int xc, int yc, int R, COLORREF color) {
    int x = 0, y = R;
    Draw8Points(hdc, xc, yc, x, y, color);
    int d = 1 - R;
    int ch1 = 3, ch2 = 5 - 2 * R;
    while (x < y) {
        if (d < 0) {
            d += ch1;
            ch2 += 2;
        } else {
            d += ch2;
            ch2 += 4;
            y--;
        }
        ch1 += 2;
        x++;
        Draw8Points(hdc, xc, yc, x, y, color);
    }
}

void drawSmile(HDC hdc, int xc, int yc, int R, COLORREF color){
    Draw_Circle( hdc,  xc,  yc,  R, color);
    Draw_Circle( hdc,  xc+(.5*R),  yc-(.5*R),  .2*R,  color);
    Draw_Circle( hdc,  xc-(.5*R),  yc-(.5*R), 0.2* R,  color);
    Draw_Circle( hdc,  xc,  yc+(.5*R),  .3*R,  color);
}
LRESULT WINAPI WndProc(HWND hwnd, UINT m, WPARAM wp, LPARAM lp) {
    static int startx, starty, endx, endy, radius;
    HDC hdc;

    switch (m) {
        case WM_LBUTTONDOWN:
            startx = LOWORD(lp);
            starty = HIWORD(lp);
            break;
        case WM_LBUTTONUP:
            endx = LOWORD(lp);
            endy = HIWORD(lp);
            hdc = GetDC(hwnd);
            radius = static_cast<int>(sqrt((endx - startx) * (endx - startx) + (endy - starty) * (endy - starty)));
            drawSmile(hdc, startx, starty, radius, RGB(159, 43, 104));
            ReleaseDC(hwnd, hdc);
            break;
        case WM_DESTROY:
            PostQuitMessage(0);
            return 0;
        default:
            return DefWindowProc(hwnd, m, wp, lp);
    }
    return 0;
}

int APIENTRY WinMain(HINSTANCE hi, HINSTANCE pi, LPSTR c, int ns) {
    WNDCLASS wc;
    wc.cbClsExtra = 0;
    wc.cbWndExtra = 0;
    wc.hbrBackground = (HBRUSH) GetStockObject(LTGRAY_BRUSH);
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hIcon = LoadIcon(NULL, IDI_WINLOGO);
    wc.hInstance = hi;
    wc.lpfnWndProc = WndProc;
    wc.lpszClassName = "MyClass";
    wc.lpszMenuName = NULL;
    wc.style = CS_HREDRAW | CS_VREDRAW;
    RegisterClass(&wc);
    HWND hwnd = CreateWindow("MyClass", "ooooooooooooo", WS_OVERLAPPEDWINDOW, 0, 0, 600, 400, NULL, NULL, hi, 0);
    ShowWindow(hwnd, ns);
    UpdateWindow(hwnd);
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0) > 0) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return 0;
}
